@import './colors';
@import './elements';
@import './mixins';
@import './typography';

:global {

.block {
  display: block;
}

.chart {
  @include block-margin(2rem);
}

.tweet {
  @include block-margin;
}

.iframe {
  display: block;
  background-color: mix($color-white, $color-lightgray, 50%);

  &.loaded {
    background-color: unset;
  }

  > iframe {
    display: block;
    width: 100%;
  }
}

.video {
  display: block;

  > video {
    display: block;
    width: 100%;
  }
}

.audio {
  display: block;

  > video {
    display: block;
    width: 100%;
  }
}

.refresh {
  padding: 0 0.25rem;
  color: $color-white;
  background-color: $color-purple;
}

.highlight {
  padding: 0 0.25rem;
  background-color: $color-yellow;
}

.button {
  padding: 0.25rem 0.25rem;
  background-color: $color-lightgray;
  border-radius: 0.6rem;
}

.subhead {
  @include typography-sans;
  @include typography-size(large);
  display: table; // To get both collapsing margins and block layout
  margin-top: 2rem;
  padding: 0.3em 0.2em 0.2em; // Intentionally em
  color: $color-white;
  background-color: $color-black;
  line-height: 1;

  &.numeral {
    @include typography-mono;
    padding: 0.3em 0.2em; // Intentionally em
  }

  &.small {
    @include typography-size(x-small);
    padding: 0.4em 0.3em; // Intentionally em
    text-transform: uppercase;
    letter-spacing: 0.1em; // Intentionally em
  }

  @each $name, $color in $colors {
    &.#{$name} {
      background-color: $color;
    }
  }
}

.dl {
  @include block-margin;
  display: block;

  > .dt, > .dd {
    display: block;
  }

  > .dd {
    padding: 0.5rem 0 1rem 1rem;
  }

  > .dt + .dt,
  > .dt + .dd,
  > .dd + .dd,
  > .dd + .dt {
    margin-top: 0.25rem;
  }
}

.listicle {
  @include block-margin;
  @include unset-lists;
  @include typography-size(x-small);

  > ul > li + li {
    margin-top: 0.25em; // Intentionally em
  }
}

.group {
  @include remove-edge-margins;
  display: block;
  position: relative;
}

.stack {
  @include block-margin;
  display: flex;
  flex-direction: row;

  > .group {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 0;
  }

  > .group + .group {
    margin-left: 2rem;
  }
}

.cell-stack {
  @include unset-paragraphs;
  display: flex;
  flex-direction: row;
  align-items: center;

  > *:not(:first-child) {
    margin-left: 0.75em; // Intentionally em
  }
}

.grid {
  @include block-margin;
  display: grid;
  grid-gap: 2rem;
  grid-template-columns: auto auto;

  > * {
    margin-top: 0;
  }

  > .grid:not(:first-child) {
    margin-left: 1rem;
  }

  &.ratio-1-1 {
    grid-template-columns: 1fr 1fr;
  }

  &.ratio-1-2 {
    grid-template-columns: 1fr 2fr;
  }

  &.ratio-2-1 {
    grid-template-columns: 2fr 1fr;
  }

  &.ratio-1-3 {
    grid-template-columns: 1fr 3fr;
  }

  &.ratio-3-1 {
    grid-template-columns: 3fr 1fr;
  }

  &.ratio-1-4 {
    grid-template-columns: 1fr 4fr;
  }

  &.ratio-4-1 {
    grid-template-columns: 4fr 1fr;
  }

  @for $count from 2 through 8 {
    &.across-#{$count} {
      grid-template-columns: repeat($count, 1fr);
    }
  }
}

.table {
  @extend .grid;
  grid-gap: 0.5rem;

  > .th, > .td {
    @include remove-edge-margins;
    padding: 0.75rem;
  }

  > .th {
    &.black {
      color: $color-white;
      background-color: $color-black;
    }

    &.lightgray {
      color: $color-black;
      background-color: $color-lightgray;
    }
  }
}

.columns {
  @include block-margin;
  @include remove-edge-margins;
  display: block;
  column-gap: 2rem;

  @each $count in 2, 3, 4 {
    &.across-#{$count} {
      column-count: $count;
    }
  }
}

.box {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 0;
  display: block;
  padding: 0.8em; // Intentionally em

  &.gray {
    color: $color-black;
    background-color: $color-lightgray;
  }

  &.orange {
    color: $color-white;
    background-color: $color-orange;
  }

  &.purple {
    color: $color-white;
    background-color: $color-purple;
  }

  &.bordered {
    border: solid 4px $color-yellow;
  }
}

.box-grid {
  @include block-margin;
  @include unset-paragraphs;
  display: grid;
  grid-gap: 0.5rem;

  @for $count from 2 through 4 {
    &.across-#{$count} {
      grid-template-columns: repeat($count, 1fr);
    }
  }
}

.box-list {
  @include block-margin;
  @include unset-lists;

  > ul {
    display: flex;
    flex-direction: row;
    padding: 0;

    > li {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: center;
      flex-grow: 1;
      flex-shrink: 1;
      flex-basis: 0;
      display: block;
      padding: 2rem 0;
      text-align: center;
    }

    > li + li {
      margin-left: 0.5rem;
    }
  }

  &.purple {
    > ul > li {
      color: $color-white;
      background-color: $color-purple;
    }
  }

  &.gray {
    > ul > li {
      color: $color-black;
      background-color: $color-lightgray;
    }
  }
}

.figure {
  @include block-margin;
  @include typography-sans;
  display: block;
  position: relative;

  p {
    margin: 0;
  }

  img {
    display: block;
  }

  &.bordered {
    border: solid 1px black;
  }

  &.grayscale {
    img {
      filter: grayscale(1);
    }
  }

  &.tinted {
    img {
      filter: brightness(0.9);
    }
  }

  .caption {
    @include typography-size(xx-small);
    display: inline;
    position: absolute;
    left: 0.3rem;
    bottom: 0.3rem;
    padding: 0.2em 0.5em; // Intentionally em
    color: $color-white;
    background-color: rgba($color-black, 0.5);
    line-height: 1;

    &.top {
      top: 0.3rem;
      bottom: unset;
    }
  }
}

.quote {
  @include relative-block-margin;
  @include remove-edge-margins;
  color: $color-darkgray;

  blockquote {
    @include remove-edge-margins;
    margin-bottom: 0.75em; // Intentionally em
  }
}

.quote-list {
  @include block-margin;
  @include unset-lists;
  color: $color-darkgray;

  > ul {
    > li {
      padding-left: 0.3rem;
      border-style: solid;
      border-color: #dddddd;
      border-left-width: 2px;
    }

    > li + li {
      margin-top: 0.75rem;
    }
  }

  @each $name, $color in $colors {
    &.#{$name} {
      color: $color;
    }
  }
}

.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: dotted 1px black;

  .tooltip-text {
    @include typography-size(x-small);
    visibility: hidden;
    z-index: 1;
    position: absolute;
    width: 12.5rem;
    padding: 1rem;
    border-radius: 3px;
    color: $color-white;
    background-color: $color-orange;
    text-align: center;
  }

  &:hover .tooltip-text {
    visibility: visible;
  }
}

.timeline-title {
  @include typography-sans;
  @include typography-size(xxx-small);
  color: $color-purple;
  font-weight: bold;
  letter-spacing: 0.1em; // Intentionally em
  text-transform: uppercase;
}

.timeline-list {
  @include block-margin;
  @include unset-lists;
  @include typography-size(xxx-small)

  > ul {
    display: flex;
    flex-direction: row;

    > li {
      @include remove-edge-margins;
      flex-grow: 1;
      flex-shrink: 1;
      flex-basis: 0;
      padding: 0.5rem;
      border: solid 1px black;
    }

    > li + li {
      margin-left: 0.5rem;
    }
  }

  > ul > li > ul > li + li {
    margin-top: 1em; // Intentionally em
  }
}

.timeline-grid {
  @include block-margin(2rem);
  @include unset-headers;
  @include unset-lists;
  font-size: 11px; // TODO

  > ul {
    display: grid;
    grid-gap: 0.5rem;

    > li {
      @include remove-edge-margins;
      position: relative;
      padding: 0.5rem;
    }
  }

  > ul > li > ul > li + li {
    margin-top: 1em; // Intentionally em
  }

  h3 {
    @include typography-size(x-medium);
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: 0.5rem;
    color: white;
    background-color: gray;
  }

  &.across-6 {
    > ul {
      grid-template-columns: repeat(6, 1fr);
    }
  }

  &.across-8 {
    > ul {
      grid-template-columns: repeat(8, 1fr);
    }
  }

  .timeline-title {
    display: inline;

    &:before {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border: solid 1px black;
      pointer-events: none;
    }
  }
}

} // :global
